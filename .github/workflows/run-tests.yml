name: phpunit

on: push

jobs:
  phpunit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: [ '8.1', '8.2' ]

    name: PHP ${{ matrix.php }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, bcmath, intl, gd, exif, iconv, fileinfo, swoole
          ini-values: error_reporting=E_ALL
          coverage: none

      - name: Setup sphinxsearch
        # sudo echo "START=yes\n" > /etc/default/sphinxsearch
        # sudo searchd --status
        # sudo systemctl list-units
        # sudo systemctl status sphinxsearch.service
        # cat /etc/default/sphinxsearch
        # cat /etc/init.d/sphinxsearch
        run: |
          sudo cp sphinx.conf.ci /etc/sphinxsearch/sphinx.conf
          sudo sed -i 's/START=no/START=yes/g' /etc/default/sphinxsearch
          # sudo cat /etc/default/sphinxsearch
          sudo systemctl list-units
          sudo systemctl status sphinxsearch.service
          sudo systemctl start sphinxsearch.service
          # sudo systemctl status sphinxsearch.service
          # sudo ls -l /var/log/sphinxsearch
          # sudo ls -l /run
          # sudo ls -l /tmp
          # sudo ps auxww | grep search
          # sudo cat /var/log/sphinxsearch/searchd.log
          # sudo searchd --status

      - name: Create database
        run: |
          sudo systemctl start mysql.service
          mysql -u root -proot -e 'CREATE DATABASE IF NOT EXISTS tests;'

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}

      - name: Run composer install
        run: composer install --prefer-dist --no-interaction --no-progress
        env:
          # {"http-basic":{"example.com":{"username":"login","password":"key"}}}
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}

      - name: Cache yarn dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: yarn-${{ hashFiles('yarn.lock') }}

      - run: yarn --ignore-platform
      - run: yarn prod

      #- name: Install graphicsmagick
      #  run: sudo apt-get install graphicsmagick

      - name: Start sphinxsearch
        run: sudo /etc/init.d/sphinxsearch start

      - name: Prepare Laravel Application
        run: |
          cp .env.ci .env
          php artisan key:generate
          composer fresh

      - name: Run PHPUnit
        run: composer test

      - name: Run Laravel Pint
        run: composer pint
